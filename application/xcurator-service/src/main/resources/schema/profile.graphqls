extend type Query  {
    "get users (xCurator) profile"
    profile: UserProfile @hasRole(roles: [USER])

    "get users (xCurator) favourites"
    myFavourites: [Artefact!]! @hasRole(roles: [USER])
}

type Mutation {
    deleteUserProfile(delete: UserUniqueInput!) : String @hasRole(roles: [ADMIN, USER])
    createUserProfile(create: CreateUserProfileInput!) : UserProfile @hasRole(roles: [USER])
    updateUserProfile(update: UpdateUserProfileInput!): UserProfile @hasRole(roles: [USER])

    # TODO this is most probably a query and not a mutation
    exportProfile(where: UserUniqueInput!): String!  @hasRole(roles: [ADMIN])

    # Favourite's
    addArtefactToFavourite(create: ArtefactFavouriteInput!): ID!
    deleteArtefactFromFavourite(delete: ArtefactFavouriteInput!): String!
}


type User @key(fields: "sub") @extends {
    "user id generated by idp"
    sub: ID! @external
    username: String!
}

"xCurator specific profile information's"
type UserProfile {
    username: String!
    "preferred user language"
    preferredLanguage:Language!
    "artefacts stored as favourites"
    favorites:[Artefact!]!
    "regions the user is interested in"
    continents:[Continent!]!
    "grouped four epochs the user is interested in"
    epochs: [ProfileEpoch!]!
    "informational visitor tole (has no functional effect)"
    visitorRole:VisitorRole
    "user wish / intention / expectation of the application"
    visitorWish:VisitorWish
    "target the user wants to fulfill with the application"
    visitorTarget:VisitorTarget
}

##### ENUMS

enum Continent {
    AFRICA,
    ASIA,
    AMERICA,
    EUROPA
}

enum ProfileEpoch {
    MODERN_AND_PRESENT,
    MIDDLE_AGES,
    ANTIQUITY,
    PRE_AND_EARLY_HISTORY
}

enum VisitorRole {
    STUDENT,
    TEACHER,
    RESEARCHER,
    VISITOR,
    CURATOR,
    OTHER
}

enum VisitorTarget {
    CONTENT_CREATION,
    INSPIRATION,
    LEARN_SOMETHING_NEW,
    FIND_SOMETHING
}

enum VisitorWish {
    EDUCATION,
    ENTERTAINMENT,
    RESEARCH,
    WORK
}


#### INPUTS

input UserUniqueInput{
    "user id, given by the idp provider (e.g. keycloak)"
    sub: ID!
}

input CreateUserProfileInput {
    "user id, given by the idp provider (e.g. keycloak)"
    sub: ID!
    "users preferred language the xCurator should set up"
    preferredLanguage:Language!
    username: String!
}

input UpdateUserProfileInput {
    preferredLanguage:Language!
    "regions the user is interested in"
    continents:[Continent!]
    "grouped four epochs the user is interested in"
    epochs: [ProfileEpoch!]
    "informational visitor tole (has no functional effect)"
    visitorRole:VisitorRole
    "user wish / intention / expectation of the application"
    visitorWish:VisitorWish
    "target the user wants to fullfill with the application"
    visitorTarget:VisitorTarget
    username: String
}

input ArtefactFavouriteInput{
    "artefact (identifier) to be added as favourite "
    id: ID!
}
